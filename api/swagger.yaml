openapi: "3.0.0"
info:
  version: 0.0.1
  title: Grand Pool API
  description: Grand Pool mining pool API
paths:
  /blockchains:
    get:
      tags:
        - blockchains
      summary: Get available blockchains list
      operationId: getBlockchains
      responses:
        '200':
          description: 'Blockchains list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainsList'
  /prices:
    get:
      tags:
        - prices
      summary: Get blockchains prices list
      operationId: getPrices
      responses:
        '200':
          description: 'Prices list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesList'
        '500':
          description: 'Get prices error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_prices_error'
  /prices/{blockchain}:
    get:
      tags:
        - prices
      summary: Get blockchain markets
      operationId: getBlockchainMarkets
      parameters:
        - $ref: "#/components/parameters/Blockchain"
      responses:
        '200':
          description: Blockchain markets response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainMarkets'
        '404':
          description: 'Blockchain markets not found error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'blockchain_markets_not_found'
        '500':
          description: 'Get blockchain markets error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_blockchain_markets_error'
  /pools:
    get:
      tags:
        - pools
      summary: Get pool info and statistics for all blockchains
      operationId: getPools
      parameters:
        - description: Include pool solo statistics (if pool supports solo mining) in response?
          in: query
          name: include_solo_stats
          schema:
            type: boolean
        - description: Include pool network info in response?
          in: query
          name: include_network_info
          schema:
            type: boolean 
      responses:
        '200':
          description: 'Pools list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsList'
        '500':
          description: 'Get pools error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_pools_error'
  /pools/{blockchain}:
    get:
      tags:
        - pools
      summary: Get full pool data on blockchain
      operationId: getBlockchainPool
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - description: Show data for solo pool (if pool supports solo mining)?
          in: query
          name: solo
          schema:
            type: boolean
      responses:
        '200':
          description: 'Pool data response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get pool data error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_pool_data_error'
  /pools/{blockchain}/info:
    get:
      tags:
        - pools
      summary: Get pool info on blockchain
      operationId: getBlockchainPoolInfo
      parameters:
        - $ref: "#/components/parameters/Blockchain"
      responses:
        '200':
          description: 'Pool info response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolInfo'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get pool info error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_pool_info_error'
  /pools/{blockchain}/stats:
    get:
      tags:
        - pools
      summary: Get pool statistics on blockchain
      operationId: getBlockchainPoolStats
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - description: Show statistics for solo pool (if pool supports solo mining)?
          in: query
          name: solo
          schema:
            type: boolean
      responses:
        '200':
          description: 'Pool statistics response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolStats'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get pool statistics error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_pool_stats_error'
  /pools/{blockchain}/slaves:
    get:
      tags:
        - pools
      summary: Get pool locations on blockchain
      operationId: getBlockchainPoolSlaves
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - description: Show slaves for solo pool (if pool supports solo mining)?
          in: query
          name: solo
          schema:
            type: boolean
      responses:
        '200':
          description: 'Pool slaves list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolSlavesList'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get pool slaves error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_pool_slaves_error'
  /pools/{blockchain}/network_info:
    get:
      tags:
        - pools
      summary: Get pool blockchain network info
      operationId: getBlockchainPoolNetworkInfo
      parameters:
        - $ref: "#/components/parameters/Blockchain"
      responses:
        '200':
          description: 'Pool blockchain network info response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolNetworkInfo'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get pool blockchain network info error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_pool_network_info_error'
  /miners/{blockchain}:
    get:
      tags:
        - miners
      summary: Get miners list on blockchain
      operationId: getBlockchainMiners
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/QueryPaginationLimit"
        - $ref: "#/components/parameters/QueryPaginationOffset"
        - description: Miners list sorts
          in: query
          name: sorts
          schema:
            example: 'address:desc,hashrate:asc,workers_count:desc,blocks_count:asc,solo_blocks_count:desc,joined_at:asc'
            type: string
        - description: Miner address filter
          name: address
          in: query
          schema:
            type: string
        - description: Miner hashrate filter
          name: hashrate
          in: query
          schema:
            example: '1000:100000000'
            type: string
        - description: Miner workers count filter
          name: workers_count
          in: query
          schema:
            example: '0:100'
            type: string
        - description: Miner mined blocks count filter
          name: blocks_count
          in: query
          schema:
            example: '1:10 or 50'
            type: string
        - description: Miner mined solo blocks count filter
          name: solo_blocks_count
          in: query
          schema:
            example: '1:10 or 50'
            type: string
        - description: Miner joined at time filter
          name: joined_at
          in: query
          schema:
            example: '2024-01-01T15:52:01+00:00..2024-02-02'
            type: string
      responses:
        '200':
          description: 'Miners list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinersList'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get miners list error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miners_error'
  /miners/{blockchain}/miner/{miner}:
    get:
      tags:
        - miners
      summary: Get miner info on blockchain
      operationId: getBlockchainMiner
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
      responses:
        '200':
          description: 'Miner info response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Miner'
        '400':
          $ref: '#/components/responses/BlockchainNotFound'
        '404':
          description: 'Miner not found error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'miner_not_found'
        '500':
          description: 'Get miner info error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_error'
  /miners/{blockchain}/workers/{miner}:
    get:
      tags:
        - miners
      summary: Get miner workers list on blockchain
      operationId: getBlockchainMinerWorkers
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
      responses:
        '200':
          description: 'Miner workers list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerWorkersList'
        '400':
          $ref: '#/components/responses/BlockchainNotFound'
        '404':
          description: 'Miner workers not found error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'miner_workers_not_found'
        '500':
          description: 'Get miner workers error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_workers_error'
  /payouts/{blockchain}:
    get:
      tags:
        - payouts
      summary: Get payouts list on blockchain
      operationId: getBlockchainPayouts
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/QueryPaginationLimit"
        - $ref: "#/components/parameters/QueryPaginationOffset"
        - description: Payouts list sorts
          in: query
          name: sorts
          schema:
            example: 'miner:desc,tx_hash:asc,amount:desc,paid_at:asc'
            type: string
        - description: Payout miner address filter
          name: miner
          in: query
          schema:
            type: string
        - description: Payout transaction hash filter
          name: tx_hash
          in: query
          schema:
            type: string  
        - description: Payout amount filter
          name: amount
          in: query
          schema:
            example: '1000:2000000'
            type: string
        - description: Payout time filter
          name: paid_at
          in: query
          schema:
            example: '2024-01-01T15:52:01+00:00..2024-02-02'
            type: string
      responses:
        '200':
          description: 'Payouts list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutsList'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get payouts list error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_payouts_error'
  /payouts/{blockchain}/balance/{miner}:
    get:
      tags:
        - payouts
      summary: Get miner balance on blockchain
      operationId: getBlockchainMinerBalance
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
      responses:
        '200':
          description: 'Miner balance response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerBalance'
        '500':
          description: 'Get miner balance error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_balance_error'
        '400':
          $ref: '#/components/responses/BlockchainNotFound'
        '404':
          description: 'Miner balance not found error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'miner_balance_not_found'
  /blocks/{blockchain}:
    get:
      tags:
        - blocks
      summary: Get blocks list on blockchain
      operationId: getBlockchainBlocks
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/QueryPaginationLimit"
        - $ref: "#/components/parameters/QueryPaginationOffset"
        - description: Blocks list sorts
          in: query
          name: sorts
          schema:
            example: 'miner:desc,miner_hashrate:asc,block_hash:desc,round_miners_count:desc,mined_at:asc'
            type: string
        - description: Mined block miner address filter
          name: miner
          in: query
          schema:
            type: string
        - description: Mined block miner hashrate filter
          name: miner_hashrate
          in: query
          schema:
            example: '1000:100000000'
            type: string
        - description: Mined block hash filter
          name: block_hash
          in: query
          schema:
            type: string
        - description: Round miners count filter
          name: round_miners_count
          in: query
          schema:
            example: '500 or 100:1000'
            type: string
        - description: Mined block time filter
          name: 'mined_at'
          in: query
          schema:
            example: '2024-01-01T15:52:01+00:00..2024-02-02'
            type: string
      responses:
        '200':
          description: 'Mined blocks list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinedBlocksList'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get blocks list error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_blocks_error'
  /blocks/{blockchain}/solo:
    get:
      tags:
        - blocks
      summary: Get solo blocks list on blockchain
      operationId: getBlockchainSoloBlocks
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/QueryPaginationLimit"
        - $ref: "#/components/parameters/QueryPaginationOffset"
        - description: Solo blocks list sorts
          in: query
          name: sorts
          schema:
            example: 'miner:desc,miner_hashrate:asc,block_hash:desc,reward:asc,tx_hash:desc,mined_at:desc'
            type: string
        - description: Mined solo block miner address filter
          name: miner
          in: query
          schema:
            type: string
        - description: Mined solo block miner hashrate filter
          name: miner_hashrate
          in: query
          schema:
            example: '1000:100000000'
            type: string
        - description: Mined solo block hash filter
          name: block_hash
          in: query
          schema:
            type: string
        - description: Mined solo block reward filter
          name: reward
          in: query
          schema:
            example: '999:99999999'
            type: string
        - description: Mined solo block transaction hash filter
          name: tx_hash
          in: query
          schema:
            type: string
        - description: Mined solo block time filter
          name: 'mined_at'
          in: query
          schema:
            example: '2024-01-01T15:52:01+00:00..2024-02-02'
            type: string
      responses:
        '200':
          description: 'Solo blocks list response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinedSoloBlocksList'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '405':
          description: 'Getting solo blocks list is not implemented on blockchain'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_solo_blocks_not_implemented'
        '500':
          description: 'Get solo blocks list error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_solo_blocks_error'
  /charts/{blockchain}/pool_stats:
    get:
      tags:
        - charts
      summary: Get pool stats chart points
      operationId: getBlockchainPoolStatsChart
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/ChartPeriod"
        - description: Show pool solo stats points (if pool supports solo mining)?
          in: query
          name: solo
          schema:
            type: boolean
      responses:
        '200':
          description: 'Pool stats chart response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolStatsPoints'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get pool stats chart error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_pool_stats_chart_error'
  /charts/{blockchain}/rounds:
    get:
      tags:
        - charts
      summary: Get rounds chart points
      operationId: getBlockchainRoundsChart
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/ChartPeriod"
      responses:
        '200':
          description: 'Rounds chart response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoundsPoints'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get rounds chart error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_rounds_chart_error'
  /charts/{blockchain}/miner/{miner}/profitabilities:
    get:
      tags:
          - charts
      summary: Get miner profitabilities chart points
      operationId: getBlockchainMinerProfitabilitiesChart
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
        - $ref: "#/components/parameters/ChartPeriod"
        - description: Show miner solo profitabilities points (if pool supports solo mining)?
          in: query
          name: solo
          schema:
            type: boolean
      responses:
        '200':
          description: 'Miner profitabilities chart response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerProfitabilitiesPoints'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get miner profitabilities chart error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_profitabilities_chart_error'
  /charts/{blockchain}/miner/{miner}/hashrates:
    get:
      tags:
        - charts
      summary: Get miner hashrates chart points
      operationId: getBlockchainMinerHashratesChart
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
        - $ref: "#/components/parameters/ChartPeriod"
        - description: Show miner solo hashrates points (if pool supports solo mining)?
          in: query
          name: solo
          schema:
            type: boolean
      responses:
        '200':
          description: 'Miner hashrates chart response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerHashratesPoints'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get miner hashrates chart error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_hashrates_chart_error'
  /charts/{blockchain}/miner/{miner}/shares:
    get:
      tags:
        - charts
      summary: Get miner shares chart points
      operationId: getBlockchainMinerSharesChart
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
        - $ref: "#/components/parameters/ChartPeriod"
        - description: Show miner solo shares points (if pool supports solo mining)?
          in: query
          name: solo
          schema:
            type: boolean
      responses:
        '200':
          description: 'Miner shares chart response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerSharesPoints'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get miner shares chart error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_shares_chart_error'
  /charts/{blockchain}/miner/{miner}/worker/{worker}/hashrates:
    get:
      tags:
        - charts
      summary: Get miner worker hashrates chart points
      operationId: getBlockchainMinerWorkerHashratesChart
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
        - $ref: "#/components/parameters/Worker"
        - $ref: "#/components/parameters/ChartPeriod"
      responses:
        '200':
          description: 'Miner worker hashrates chart response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerHashratesPoints'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get miner worker hashrates chart error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_worker_hashrates_chart_error'
  /charts/{blockchain}/miner/{miner}/worker/{worker}/shares:
    get:
      tags:
        - charts
      summary: Get miner worker shares chart points
      operationId: getBlockchainMinerWorkerSharesChart
      parameters:
        - $ref: "#/components/parameters/Blockchain"
        - $ref: "#/components/parameters/Miner"
        - $ref: "#/components/parameters/Worker"
        - $ref: "#/components/parameters/ChartPeriod"
      responses:
        '200':
          description: 'Miner worker shares chart response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerSharesPoints'
        '404':
          $ref: '#/components/responses/BlockchainNotFound'
        '500':
          description: 'Get miner worker shares chart error'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - type: object
                  properties:
                    code:
                      example: 'get_miner_worker_shares_chart_error'
components:
  responses:
    BlockchainNotFound:
      description: 'Blockchain not found error'
      content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  code:
                    example: 'blockchain_not_found'
  parameters:
    Blockchain:
      name: blockchain
      in: path
      description: Pool blockchain
      required: true
      schema:
        type: string
    Miner:
      name: miner
      in: path
      description: Pool miner
      required: true
      schema:
        type: string
    Worker:
      name: worker
      in: path
      description: Pool worker
      required: true
      schema:
        type: string
    QueryPaginationLimit:
      description: List rows limit
      in: query
      name: limit
      required: true
      schema:
        default: 10
        format: uint32
        type: integer
    QueryPaginationOffset:
      description: List rows offset
      in: query
      name: offset
      required: true
      schema:
        default: 0
        format: uint32
        type: integer
    ChartPeriod:
      description: Chart period
      in: query
      name: period
      required: true
      schema:
        $ref: "#/components/schemas/ChartPeriod"
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
    ListPagination:
      type: object
      required:
        - limit
        - offset
        - total
      properties:
        limit:
          format: uint32
          type: integer
        offset:
          format: uint32
          type: integer
        total:
          format: uint32
          type: integer
    BlockchainInfo:
      type: object
      required:
        - blockchain
        - name
        - ticker
        - atomic_unit
      properties:
        blockchain:
          type: string
        name:
          type: string
        ticker:
          type: string
        atomic_unit:
          format: uint16
          type: integer
    BlockchainsList:
      type: object
      required:
        - blockchains
      properties:
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainInfo'
    ChartPeriod:
      type: string
      enum:
        - 'hour'
        - 'day'
        - 'week'
        - 'month'
    AddressFormat:
      type: string
      enum:
        - 'normal'
        - 'memo'
    Price:
      type: object
      required:
        - price
        - price_change_24h_percentage
      properties:
        price:
          type: number
          format: double
        price_change_24h_percentage:
          type: number
          format: double
    MarketPrice:
      allOf:
        - $ref: '#/components/schemas/Price'
        - type: object
          required:
            - ticker
          properties:
            ticker:
              type: string
    BlockchainPrice:
      allOf:
        - $ref: '#/components/schemas/Price'
        - type: object
          required:
            - blockchain
          properties:
            blockchain:
              type: string
    PricesList:
      type: object
      required:
        - prices
      properties:
        prices:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainPrice'
    BlockchainMarkets:
      allOf:
        - $ref: '#/components/schemas/Price'
        - type: object
          required:
            - markets
          properties:
            markets:
              type: array
              items:
                $ref: '#/components/schemas/MarketPrice'
    PayoutMode:
      type: string
      enum:
        - pplns
        - prop
    PoolFee:
      type: object
      required:
        - fee
      properties:
        fee:
          type: number
          format: double
        solo_fee:
          type: number
          format: double
    PayoutsInfo:
      type: object
      required:
        - interval
        - min_payout
      properties:
        interval:
          format: uint32
          type: integer
        min_payout:
          format: uint64
          type: integer
        max_payout:
          format: uint64
          type: integer
    PoolInfo:
      type: object
      required:
        - blockchain
        - host
        - payout_mode
        - address_format
        - solo
        - fee
        - payouts_info
      properties:
        blockchain:
          type: string
        host:
          type: string
        algos:
          type: array
          items:
            type: string
        payout_mode:
          $ref: '#/components/schemas/PayoutMode'
        address_format:
          $ref: '#/components/schemas/AddressFormat'
        solo:
          type: boolean
        fee: 
          $ref: '#/components/schemas/PoolFee'
        payouts_info:
          $ref: '#/components/schemas/PayoutsInfo'
        agents:
          type: array
          items:
            type: string
    PoolStats:
      type: object
      required:
        - miners_count
        - workers_count
        - hashrate
        - avg_hashrate
        - blocks_count_24h
      properties:
        miners_count:
          format: uint32
          type: integer
        workers_count:
          format: uint32
          type: integer
        hashrate:
          type: string
        avg_hashrate:
          type: string
        blocks_count_24h:
          format: uint32
          type: integer
    PoolSlave:
      type: object
      required:
        - region
        - host
        - tcp_port
        - ssl_port
        - connected_at
      properties:
        region:
          type: string
        host:
          type: string
        tcp_port:
          format: uint32
          type: integer
        ssl_port:
          format: uint32
          type: integer
        connected_at:
          type: string
    PoolSlavesList:
      type: object
      required:
        - slaves
      properties:
        slaves:
          type: array
          items:
            $ref: '#/components/schemas/PoolSlave'
    PoolNetworkInfo:
      type: object
      required:
        - top_block_hash
        - difficulty
        - block_reward
      properties:
        top_block_hash:
          type: string
        difficulty:
          type: string
        block_reward:
          format: uint64
          type: integer
    Pool:
      type: object
      required:
        - info
        - stats
        - network_info
        - slaves
      properties:
        info: 
          $ref: '#/components/schemas/PoolInfo'
        stats:
          $ref: '#/components/schemas/PoolStats'
        network_info:
          $ref: '#/components/schemas/PoolNetworkInfo'
        slaves:
          type: array
          items:
            $ref: '#/components/schemas/PoolSlave'
    BlockchainPool:
      type: object
      required:
        - info
        - stats
      properties:
        info:
          $ref: '#/components/schemas/PoolInfo'
        stats:
          $ref: '#/components/schemas/PoolStats'
        solo_stats:
          $ref: '#/components/schemas/PoolStats'
        network_info:
          $ref: '#/components/schemas/PoolNetworkInfo'
    PoolsList:
      type: object
      required:
        - pools
      properties:
        pools:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainPool'
    Miner:
      type: object
      required:
        - address
        - hashrate
        - workers_count
        - blocks_count
        - solo_blocks_count
        - joined_at
        - last_activity
      properties:
        address:
          type: string
        hashrate:
          type: string
        workers_count:
          format: uint32
          type: integer
        blocks_count:
          format: uint32
          type: integer
        solo_blocks_count:
          format: uint32
          type: integer
        joined_at:
          type: string
        last_activity:
          type: string
    MinersList:
      allOf:
        - $ref: '#/components/schemas/ListPagination'
        - type: object
          required:
            - miners
          properties:
            miners:
              type: array
              items:
                $ref: '#/components/schemas/Miner'
    Payout:
      type: object
      required:
        - miner
        - tx_hash
        - amount
        - paid_at
      properties:
        miner:
          type: string
        tx_hash:
          type: string
        amount:
          format: uint64
          type: integer
        paid_at:
          type: string
    PayoutsList:
      allOf:
        - $ref: '#/components/schemas/ListPagination'
        - type: object
          required:
            - miners
          properties:
            payouts:
              type: array
              items:
                $ref: '#/components/schemas/Payout'
    MinerWorker:
      type: object
      required:
        - worker
        - region
        - agent
        - solo
        - hashrate
        - connected_at
      properties:
        worker:
          type: string
        region:
          type: string
        agent:
          type: string
        solo:
          type: boolean
        hashrate:
          type: string
        connected_at:
          type: string
    MinerWorkersList:
      type: object
      required:
        - workers
      properties:
        workers:
          type: array
          items:
            $ref: '#/components/schemas/MinerWorker'
    MinerBalance:
      type: object
      required:
        - balance
      properties:
        balance:
          format: uint64
          type: integer
    MinedBlock:
      type: object
      required:
        - miner
        - miner_hashrate
        - block_hash
        - round_miners_count
        - mined_at 
      properties:
        miner:
          type: string
        miner_hashrate:
          type: string
        block_hash:
          type: string
        round_miners_count:
          format: uint32
          type: integer
        mined_at:
          type: string
    MinedBlocksList:
      allOf:
        - $ref: '#/components/schemas/ListPagination'
        - type: object
          required:
            - miners
          properties:
            blocks:
              type: array
              items:
                $ref: '#/components/schemas/MinedBlock'
    MinedSoloBlock:
      type: object
      required:
        - miner
        - miner_hashrate
        - block_hash
        - reward
        - tx_hash
        - mined_at 
      properties:
        miner:
          type: string
        miner_hashrate:
          type: string
        block_hash:
          type: string
        reward:
          format: uint64
          type: integer
        tx_hash:
          type: string
        mined_at:
          type: string
    MinedSoloBlocksList:
      allOf:
        - $ref: '#/components/schemas/ListPagination'
        - type: object
          required:
            - miners
          properties:
            blocks:
              type: array
              items:
                $ref: '#/components/schemas/MinedSoloBlock'
    PoolStatsPoint:
      type: object
      required:
        - hashrate
        - avg_hashrate
        - miners_count
        - date
      properties:
        hashrate:
          type: string
        avg_hashrate:
          type: string
        miners_count:
          format: uint32
          type: integer
        date:
          type: string
    PoolStatsPoints:
      type: object
      required:
        - points
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/PoolStatsPoint'
    RoundsPoint:
      type: object
      required:
        - rounds_count
        - miners_count
        - avg_round_interval
        - date
      properties:
        rounds_count:
          format: uint32
          type: integer
        miners_count:
          format: uint32
          type: integer
        avg_round_interval:
          type: number
          format: double
        date:
          type: string
    RoundsPoints:
      type: object
      required:
        - points
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/RoundsPoint'
    MinerHashratesPoint:
      type: object
      required:
        - hashrate
        - date
      properties:
        hashrate:
          type: string
        date:
          type: string
    MinerHashratesPoints:
      type: object
      required:
        - points
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/MinerHashratesPoint'
    MinerSharesPoint:
      type: object
      required:
        - accepted_shares_count
        - rejected_shares_count
        - stale_shares_count
        - valid_block_shares_count
        - date
      properties:
        accepted_shares_count:
          format: uint32
          type: integer
        rejected_shares_count:
          format: uint32
          type: integer
        stale_shares_count:
          format: uint32
          type: integer
        valid_block_shares_count:
          format: uint32
          type: integer
        date:
          type: string
    MinerSharesPoints:
      type: object
      required:
        - points
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/MinerSharesPoint'
    MinerProfitabilitiesPoint:
      type: object
      required:
        - balance
        - date
      properties:
        balance:
          format: uint64
          type: integer
        date:
          type: string
    MinerProfitabilitiesPoints:
      type: object
      required:
        - points
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/MinerProfitabilitiesPoint'