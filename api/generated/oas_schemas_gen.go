// Code generated by ogen, DO NOT EDIT.

package apiModels

import (
	"github.com/go-faster/errors"
)

// Ref: #/components/schemas/BlockchainInfo
type BlockchainInfo struct {
	Blockchain string `json:"blockchain"`
	Name       string `json:"name"`
	Ticker     string `json:"ticker"`
	AtomicUnit uint16 `json:"atomic_unit"`
}

// GetBlockchain returns the value of Blockchain.
func (s *BlockchainInfo) GetBlockchain() string {
	return s.Blockchain
}

// GetName returns the value of Name.
func (s *BlockchainInfo) GetName() string {
	return s.Name
}

// GetTicker returns the value of Ticker.
func (s *BlockchainInfo) GetTicker() string {
	return s.Ticker
}

// GetAtomicUnit returns the value of AtomicUnit.
func (s *BlockchainInfo) GetAtomicUnit() uint16 {
	return s.AtomicUnit
}

// SetBlockchain sets the value of Blockchain.
func (s *BlockchainInfo) SetBlockchain(val string) {
	s.Blockchain = val
}

// SetName sets the value of Name.
func (s *BlockchainInfo) SetName(val string) {
	s.Name = val
}

// SetTicker sets the value of Ticker.
func (s *BlockchainInfo) SetTicker(val string) {
	s.Ticker = val
}

// SetAtomicUnit sets the value of AtomicUnit.
func (s *BlockchainInfo) SetAtomicUnit(val uint16) {
	s.AtomicUnit = val
}

// Merged schema.
// Ref: #/components/schemas/BlockchainMarkets
type BlockchainMarkets struct {
	Price                    float64       `json:"price"`
	PriceChange24hPercentage float64       `json:"price_change_24h_percentage"`
	Markets                  []MarketPrice `json:"markets"`
}

// GetPrice returns the value of Price.
func (s *BlockchainMarkets) GetPrice() float64 {
	return s.Price
}

// GetPriceChange24hPercentage returns the value of PriceChange24hPercentage.
func (s *BlockchainMarkets) GetPriceChange24hPercentage() float64 {
	return s.PriceChange24hPercentage
}

// GetMarkets returns the value of Markets.
func (s *BlockchainMarkets) GetMarkets() []MarketPrice {
	return s.Markets
}

// SetPrice sets the value of Price.
func (s *BlockchainMarkets) SetPrice(val float64) {
	s.Price = val
}

// SetPriceChange24hPercentage sets the value of PriceChange24hPercentage.
func (s *BlockchainMarkets) SetPriceChange24hPercentage(val float64) {
	s.PriceChange24hPercentage = val
}

// SetMarkets sets the value of Markets.
func (s *BlockchainMarkets) SetMarkets(val []MarketPrice) {
	s.Markets = val
}

func (*BlockchainMarkets) getBlockchainMarketsRes() {}

// Merged schema.
type BlockchainNotFound struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *BlockchainNotFound) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *BlockchainNotFound) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *BlockchainNotFound) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *BlockchainNotFound) SetMessage(val string) {
	s.Message = val
}

func (*BlockchainNotFound) getBlockchainBlocksRes()                    {}
func (*BlockchainNotFound) getBlockchainMinerBalanceRes()              {}
func (*BlockchainNotFound) getBlockchainMinerHashratesChartRes()       {}
func (*BlockchainNotFound) getBlockchainMinerProfitabilitiesChartRes() {}
func (*BlockchainNotFound) getBlockchainMinerRes()                     {}
func (*BlockchainNotFound) getBlockchainMinerSharesChartRes()          {}
func (*BlockchainNotFound) getBlockchainMinerWorkerHashratesChartRes() {}
func (*BlockchainNotFound) getBlockchainMinerWorkerSharesChartRes()    {}
func (*BlockchainNotFound) getBlockchainMinerWorkersRes()              {}
func (*BlockchainNotFound) getBlockchainMinersRes()                    {}
func (*BlockchainNotFound) getBlockchainPayoutsRes()                   {}
func (*BlockchainNotFound) getBlockchainPoolDifficultiesChartRes()     {}
func (*BlockchainNotFound) getBlockchainPoolInfoRes()                  {}
func (*BlockchainNotFound) getBlockchainPoolNetworkInfoRes()           {}
func (*BlockchainNotFound) getBlockchainPoolRes()                      {}
func (*BlockchainNotFound) getBlockchainPoolSlavesRes()                {}
func (*BlockchainNotFound) getBlockchainPoolStatsChartRes()            {}
func (*BlockchainNotFound) getBlockchainPoolStatsRes()                 {}
func (*BlockchainNotFound) getBlockchainRoundsChartRes()               {}
func (*BlockchainNotFound) getBlockchainSoloBlocksRes()                {}

// Ref: #/components/schemas/BlockchainPool
type BlockchainPool struct {
	Info        PoolInfo           `json:"info"`
	Stats       PoolStats          `json:"stats"`
	SoloStats   OptPoolStats       `json:"solo_stats"`
	NetworkInfo OptPoolNetworkInfo `json:"network_info"`
}

// GetInfo returns the value of Info.
func (s *BlockchainPool) GetInfo() PoolInfo {
	return s.Info
}

// GetStats returns the value of Stats.
func (s *BlockchainPool) GetStats() PoolStats {
	return s.Stats
}

// GetSoloStats returns the value of SoloStats.
func (s *BlockchainPool) GetSoloStats() OptPoolStats {
	return s.SoloStats
}

// GetNetworkInfo returns the value of NetworkInfo.
func (s *BlockchainPool) GetNetworkInfo() OptPoolNetworkInfo {
	return s.NetworkInfo
}

// SetInfo sets the value of Info.
func (s *BlockchainPool) SetInfo(val PoolInfo) {
	s.Info = val
}

// SetStats sets the value of Stats.
func (s *BlockchainPool) SetStats(val PoolStats) {
	s.Stats = val
}

// SetSoloStats sets the value of SoloStats.
func (s *BlockchainPool) SetSoloStats(val OptPoolStats) {
	s.SoloStats = val
}

// SetNetworkInfo sets the value of NetworkInfo.
func (s *BlockchainPool) SetNetworkInfo(val OptPoolNetworkInfo) {
	s.NetworkInfo = val
}

// Merged schema.
// Ref: #/components/schemas/BlockchainPrice
type BlockchainPrice struct {
	Price                    float64 `json:"price"`
	PriceChange24hPercentage float64 `json:"price_change_24h_percentage"`
	Blockchain               string  `json:"blockchain"`
}

// GetPrice returns the value of Price.
func (s *BlockchainPrice) GetPrice() float64 {
	return s.Price
}

// GetPriceChange24hPercentage returns the value of PriceChange24hPercentage.
func (s *BlockchainPrice) GetPriceChange24hPercentage() float64 {
	return s.PriceChange24hPercentage
}

// GetBlockchain returns the value of Blockchain.
func (s *BlockchainPrice) GetBlockchain() string {
	return s.Blockchain
}

// SetPrice sets the value of Price.
func (s *BlockchainPrice) SetPrice(val float64) {
	s.Price = val
}

// SetPriceChange24hPercentage sets the value of PriceChange24hPercentage.
func (s *BlockchainPrice) SetPriceChange24hPercentage(val float64) {
	s.PriceChange24hPercentage = val
}

// SetBlockchain sets the value of Blockchain.
func (s *BlockchainPrice) SetBlockchain(val string) {
	s.Blockchain = val
}

// Ref: #/components/schemas/BlockchainsList
type BlockchainsList struct {
	Blockchains []BlockchainInfo `json:"blockchains"`
}

// GetBlockchains returns the value of Blockchains.
func (s *BlockchainsList) GetBlockchains() []BlockchainInfo {
	return s.Blockchains
}

// SetBlockchains sets the value of Blockchains.
func (s *BlockchainsList) SetBlockchains(val []BlockchainInfo) {
	s.Blockchains = val
}

// Ref: #/components/schemas/ChartPeriod
type ChartPeriod string

const (
	ChartPeriodHour  ChartPeriod = "hour"
	ChartPeriodDay   ChartPeriod = "day"
	ChartPeriodWeek  ChartPeriod = "week"
	ChartPeriodMonth ChartPeriod = "month"
)

// AllValues returns all ChartPeriod values.
func (ChartPeriod) AllValues() []ChartPeriod {
	return []ChartPeriod{
		ChartPeriodHour,
		ChartPeriodDay,
		ChartPeriodWeek,
		ChartPeriodMonth,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ChartPeriod) MarshalText() ([]byte, error) {
	switch s {
	case ChartPeriodHour:
		return []byte(s), nil
	case ChartPeriodDay:
		return []byte(s), nil
	case ChartPeriodWeek:
		return []byte(s), nil
	case ChartPeriodMonth:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ChartPeriod) UnmarshalText(data []byte) error {
	switch ChartPeriod(data) {
	case ChartPeriodHour:
		*s = ChartPeriodHour
		return nil
	case ChartPeriodDay:
		*s = ChartPeriodDay
		return nil
	case ChartPeriodWeek:
		*s = ChartPeriodWeek
		return nil
	case ChartPeriodMonth:
		*s = ChartPeriodMonth
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
type GetBlockchainBlocksInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainBlocksInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainBlocksInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainBlocksInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainBlocksInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainBlocksInternalServerError) getBlockchainBlocksRes() {}

// Merged schema.
type GetBlockchainMarketsInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMarketsInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMarketsInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMarketsInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMarketsInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMarketsInternalServerError) getBlockchainMarketsRes() {}

// Merged schema.
type GetBlockchainMarketsNotFound struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMarketsNotFound) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMarketsNotFound) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMarketsNotFound) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMarketsNotFound) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMarketsNotFound) getBlockchainMarketsRes() {}

// Merged schema.
type GetBlockchainMinerBalanceInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerBalanceInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerBalanceInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerBalanceInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerBalanceInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerBalanceInternalServerError) getBlockchainMinerBalanceRes() {}

// Merged schema.
type GetBlockchainMinerBalanceNotFound struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerBalanceNotFound) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerBalanceNotFound) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerBalanceNotFound) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerBalanceNotFound) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerBalanceNotFound) getBlockchainMinerBalanceRes() {}

// Merged schema.
type GetBlockchainMinerHashratesChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerHashratesChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerHashratesChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerHashratesChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerHashratesChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerHashratesChartInternalServerError) getBlockchainMinerHashratesChartRes() {}

// Merged schema.
type GetBlockchainMinerInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerInternalServerError) getBlockchainMinerRes() {}

// Merged schema.
type GetBlockchainMinerNotFound struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerNotFound) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerNotFound) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerNotFound) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerNotFound) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerNotFound) getBlockchainMinerRes() {}

// Merged schema.
type GetBlockchainMinerProfitabilitiesChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerProfitabilitiesChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerProfitabilitiesChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerProfitabilitiesChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerProfitabilitiesChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerProfitabilitiesChartInternalServerError) getBlockchainMinerProfitabilitiesChartRes() {
}

// Merged schema.
type GetBlockchainMinerSharesChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerSharesChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerSharesChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerSharesChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerSharesChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerSharesChartInternalServerError) getBlockchainMinerSharesChartRes() {}

// Merged schema.
type GetBlockchainMinerWorkerHashratesChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerWorkerHashratesChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerWorkerHashratesChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerWorkerHashratesChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerWorkerHashratesChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerWorkerHashratesChartInternalServerError) getBlockchainMinerWorkerHashratesChartRes() {
}

// Merged schema.
type GetBlockchainMinerWorkerSharesChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerWorkerSharesChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerWorkerSharesChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerWorkerSharesChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerWorkerSharesChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerWorkerSharesChartInternalServerError) getBlockchainMinerWorkerSharesChartRes() {
}

// Merged schema.
type GetBlockchainMinerWorkersInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerWorkersInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerWorkersInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerWorkersInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerWorkersInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerWorkersInternalServerError) getBlockchainMinerWorkersRes() {}

// Merged schema.
type GetBlockchainMinerWorkersNotFound struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinerWorkersNotFound) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinerWorkersNotFound) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinerWorkersNotFound) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinerWorkersNotFound) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinerWorkersNotFound) getBlockchainMinerWorkersRes() {}

// Merged schema.
type GetBlockchainMinersInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainMinersInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainMinersInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainMinersInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainMinersInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainMinersInternalServerError) getBlockchainMinersRes() {}

// Merged schema.
type GetBlockchainPayoutsInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPayoutsInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPayoutsInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPayoutsInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPayoutsInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPayoutsInternalServerError) getBlockchainPayoutsRes() {}

// Merged schema.
type GetBlockchainPoolDifficultiesChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPoolDifficultiesChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPoolDifficultiesChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPoolDifficultiesChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPoolDifficultiesChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPoolDifficultiesChartInternalServerError) getBlockchainPoolDifficultiesChartRes() {
}

// Merged schema.
type GetBlockchainPoolInfoInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPoolInfoInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPoolInfoInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPoolInfoInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPoolInfoInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPoolInfoInternalServerError) getBlockchainPoolInfoRes() {}

// Merged schema.
type GetBlockchainPoolInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPoolInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPoolInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPoolInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPoolInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPoolInternalServerError) getBlockchainPoolRes() {}

// Merged schema.
type GetBlockchainPoolNetworkInfoInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPoolNetworkInfoInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPoolNetworkInfoInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPoolNetworkInfoInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPoolNetworkInfoInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPoolNetworkInfoInternalServerError) getBlockchainPoolNetworkInfoRes() {}

// Merged schema.
type GetBlockchainPoolSlavesInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPoolSlavesInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPoolSlavesInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPoolSlavesInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPoolSlavesInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPoolSlavesInternalServerError) getBlockchainPoolSlavesRes() {}

// Merged schema.
type GetBlockchainPoolStatsChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPoolStatsChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPoolStatsChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPoolStatsChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPoolStatsChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPoolStatsChartInternalServerError) getBlockchainPoolStatsChartRes() {}

// Merged schema.
type GetBlockchainPoolStatsInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainPoolStatsInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainPoolStatsInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainPoolStatsInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainPoolStatsInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainPoolStatsInternalServerError) getBlockchainPoolStatsRes() {}

// Merged schema.
type GetBlockchainRoundsChartInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainRoundsChartInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainRoundsChartInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainRoundsChartInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainRoundsChartInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainRoundsChartInternalServerError) getBlockchainRoundsChartRes() {}

// Merged schema.
type GetBlockchainSoloBlocksInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainSoloBlocksInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainSoloBlocksInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainSoloBlocksInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainSoloBlocksInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainSoloBlocksInternalServerError) getBlockchainSoloBlocksRes() {}

// Merged schema.
type GetBlockchainSoloBlocksMethodNotAllowed struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetBlockchainSoloBlocksMethodNotAllowed) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetBlockchainSoloBlocksMethodNotAllowed) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetBlockchainSoloBlocksMethodNotAllowed) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetBlockchainSoloBlocksMethodNotAllowed) SetMessage(val string) {
	s.Message = val
}

func (*GetBlockchainSoloBlocksMethodNotAllowed) getBlockchainSoloBlocksRes() {}

// Merged schema.
type GetPoolsInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetPoolsInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetPoolsInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetPoolsInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetPoolsInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetPoolsInternalServerError) getPoolsRes() {}

// Merged schema.
type GetPricesInternalServerError struct {
	// Merged property.
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetPricesInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetPricesInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetPricesInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetPricesInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetPricesInternalServerError) getPricesRes() {}

// Merged schema.
// Ref: #/components/schemas/MarketPrice
type MarketPrice struct {
	Price                    float64 `json:"price"`
	PriceChange24hPercentage float64 `json:"price_change_24h_percentage"`
	Ticker                   string  `json:"ticker"`
}

// GetPrice returns the value of Price.
func (s *MarketPrice) GetPrice() float64 {
	return s.Price
}

// GetPriceChange24hPercentage returns the value of PriceChange24hPercentage.
func (s *MarketPrice) GetPriceChange24hPercentage() float64 {
	return s.PriceChange24hPercentage
}

// GetTicker returns the value of Ticker.
func (s *MarketPrice) GetTicker() string {
	return s.Ticker
}

// SetPrice sets the value of Price.
func (s *MarketPrice) SetPrice(val float64) {
	s.Price = val
}

// SetPriceChange24hPercentage sets the value of PriceChange24hPercentage.
func (s *MarketPrice) SetPriceChange24hPercentage(val float64) {
	s.PriceChange24hPercentage = val
}

// SetTicker sets the value of Ticker.
func (s *MarketPrice) SetTicker(val string) {
	s.Ticker = val
}

// Ref: #/components/schemas/MinedBlock
type MinedBlock struct {
	Miner            string `json:"miner"`
	MinerHashrate    string `json:"miner_hashrate"`
	BlockHash        string `json:"block_hash"`
	ShareDifficulty  uint64 `json:"share_difficulty"`
	RoundMinersCount uint32 `json:"round_miners_count"`
	MinedAt          string `json:"mined_at"`
}

// GetMiner returns the value of Miner.
func (s *MinedBlock) GetMiner() string {
	return s.Miner
}

// GetMinerHashrate returns the value of MinerHashrate.
func (s *MinedBlock) GetMinerHashrate() string {
	return s.MinerHashrate
}

// GetBlockHash returns the value of BlockHash.
func (s *MinedBlock) GetBlockHash() string {
	return s.BlockHash
}

// GetShareDifficulty returns the value of ShareDifficulty.
func (s *MinedBlock) GetShareDifficulty() uint64 {
	return s.ShareDifficulty
}

// GetRoundMinersCount returns the value of RoundMinersCount.
func (s *MinedBlock) GetRoundMinersCount() uint32 {
	return s.RoundMinersCount
}

// GetMinedAt returns the value of MinedAt.
func (s *MinedBlock) GetMinedAt() string {
	return s.MinedAt
}

// SetMiner sets the value of Miner.
func (s *MinedBlock) SetMiner(val string) {
	s.Miner = val
}

// SetMinerHashrate sets the value of MinerHashrate.
func (s *MinedBlock) SetMinerHashrate(val string) {
	s.MinerHashrate = val
}

// SetBlockHash sets the value of BlockHash.
func (s *MinedBlock) SetBlockHash(val string) {
	s.BlockHash = val
}

// SetShareDifficulty sets the value of ShareDifficulty.
func (s *MinedBlock) SetShareDifficulty(val uint64) {
	s.ShareDifficulty = val
}

// SetRoundMinersCount sets the value of RoundMinersCount.
func (s *MinedBlock) SetRoundMinersCount(val uint32) {
	s.RoundMinersCount = val
}

// SetMinedAt sets the value of MinedAt.
func (s *MinedBlock) SetMinedAt(val string) {
	s.MinedAt = val
}

// Merged schema.
// Ref: #/components/schemas/MinedBlocksList
type MinedBlocksList struct {
	Limit  uint32       `json:"limit"`
	Offset uint32       `json:"offset"`
	Total  uint32       `json:"total"`
	Blocks []MinedBlock `json:"blocks"`
}

// GetLimit returns the value of Limit.
func (s *MinedBlocksList) GetLimit() uint32 {
	return s.Limit
}

// GetOffset returns the value of Offset.
func (s *MinedBlocksList) GetOffset() uint32 {
	return s.Offset
}

// GetTotal returns the value of Total.
func (s *MinedBlocksList) GetTotal() uint32 {
	return s.Total
}

// GetBlocks returns the value of Blocks.
func (s *MinedBlocksList) GetBlocks() []MinedBlock {
	return s.Blocks
}

// SetLimit sets the value of Limit.
func (s *MinedBlocksList) SetLimit(val uint32) {
	s.Limit = val
}

// SetOffset sets the value of Offset.
func (s *MinedBlocksList) SetOffset(val uint32) {
	s.Offset = val
}

// SetTotal sets the value of Total.
func (s *MinedBlocksList) SetTotal(val uint32) {
	s.Total = val
}

// SetBlocks sets the value of Blocks.
func (s *MinedBlocksList) SetBlocks(val []MinedBlock) {
	s.Blocks = val
}

func (*MinedBlocksList) getBlockchainBlocksRes() {}

// Ref: #/components/schemas/MinedSoloBlock
type MinedSoloBlock struct {
	Miner           string `json:"miner"`
	MinerHashrate   string `json:"miner_hashrate"`
	BlockHash       string `json:"block_hash"`
	Reward          uint64 `json:"reward"`
	TxHash          string `json:"tx_hash"`
	ShareDifficulty uint64 `json:"share_difficulty"`
	MinedAt         string `json:"mined_at"`
}

// GetMiner returns the value of Miner.
func (s *MinedSoloBlock) GetMiner() string {
	return s.Miner
}

// GetMinerHashrate returns the value of MinerHashrate.
func (s *MinedSoloBlock) GetMinerHashrate() string {
	return s.MinerHashrate
}

// GetBlockHash returns the value of BlockHash.
func (s *MinedSoloBlock) GetBlockHash() string {
	return s.BlockHash
}

// GetReward returns the value of Reward.
func (s *MinedSoloBlock) GetReward() uint64 {
	return s.Reward
}

// GetTxHash returns the value of TxHash.
func (s *MinedSoloBlock) GetTxHash() string {
	return s.TxHash
}

// GetShareDifficulty returns the value of ShareDifficulty.
func (s *MinedSoloBlock) GetShareDifficulty() uint64 {
	return s.ShareDifficulty
}

// GetMinedAt returns the value of MinedAt.
func (s *MinedSoloBlock) GetMinedAt() string {
	return s.MinedAt
}

// SetMiner sets the value of Miner.
func (s *MinedSoloBlock) SetMiner(val string) {
	s.Miner = val
}

// SetMinerHashrate sets the value of MinerHashrate.
func (s *MinedSoloBlock) SetMinerHashrate(val string) {
	s.MinerHashrate = val
}

// SetBlockHash sets the value of BlockHash.
func (s *MinedSoloBlock) SetBlockHash(val string) {
	s.BlockHash = val
}

// SetReward sets the value of Reward.
func (s *MinedSoloBlock) SetReward(val uint64) {
	s.Reward = val
}

// SetTxHash sets the value of TxHash.
func (s *MinedSoloBlock) SetTxHash(val string) {
	s.TxHash = val
}

// SetShareDifficulty sets the value of ShareDifficulty.
func (s *MinedSoloBlock) SetShareDifficulty(val uint64) {
	s.ShareDifficulty = val
}

// SetMinedAt sets the value of MinedAt.
func (s *MinedSoloBlock) SetMinedAt(val string) {
	s.MinedAt = val
}

// Merged schema.
// Ref: #/components/schemas/MinedSoloBlocksList
type MinedSoloBlocksList struct {
	Limit  uint32           `json:"limit"`
	Offset uint32           `json:"offset"`
	Total  uint32           `json:"total"`
	Blocks []MinedSoloBlock `json:"blocks"`
}

// GetLimit returns the value of Limit.
func (s *MinedSoloBlocksList) GetLimit() uint32 {
	return s.Limit
}

// GetOffset returns the value of Offset.
func (s *MinedSoloBlocksList) GetOffset() uint32 {
	return s.Offset
}

// GetTotal returns the value of Total.
func (s *MinedSoloBlocksList) GetTotal() uint32 {
	return s.Total
}

// GetBlocks returns the value of Blocks.
func (s *MinedSoloBlocksList) GetBlocks() []MinedSoloBlock {
	return s.Blocks
}

// SetLimit sets the value of Limit.
func (s *MinedSoloBlocksList) SetLimit(val uint32) {
	s.Limit = val
}

// SetOffset sets the value of Offset.
func (s *MinedSoloBlocksList) SetOffset(val uint32) {
	s.Offset = val
}

// SetTotal sets the value of Total.
func (s *MinedSoloBlocksList) SetTotal(val uint32) {
	s.Total = val
}

// SetBlocks sets the value of Blocks.
func (s *MinedSoloBlocksList) SetBlocks(val []MinedSoloBlock) {
	s.Blocks = val
}

func (*MinedSoloBlocksList) getBlockchainSoloBlocksRes() {}

// Ref: #/components/schemas/Miner
type Miner struct {
	Address         string `json:"address"`
	Hashrate        string `json:"hashrate"`
	WorkersCount    uint32 `json:"workers_count"`
	BlocksCount     uint32 `json:"blocks_count"`
	SoloBlocksCount uint32 `json:"solo_blocks_count"`
	JoinedAt        string `json:"joined_at"`
	LastActivity    string `json:"last_activity"`
}

// GetAddress returns the value of Address.
func (s *Miner) GetAddress() string {
	return s.Address
}

// GetHashrate returns the value of Hashrate.
func (s *Miner) GetHashrate() string {
	return s.Hashrate
}

// GetWorkersCount returns the value of WorkersCount.
func (s *Miner) GetWorkersCount() uint32 {
	return s.WorkersCount
}

// GetBlocksCount returns the value of BlocksCount.
func (s *Miner) GetBlocksCount() uint32 {
	return s.BlocksCount
}

// GetSoloBlocksCount returns the value of SoloBlocksCount.
func (s *Miner) GetSoloBlocksCount() uint32 {
	return s.SoloBlocksCount
}

// GetJoinedAt returns the value of JoinedAt.
func (s *Miner) GetJoinedAt() string {
	return s.JoinedAt
}

// GetLastActivity returns the value of LastActivity.
func (s *Miner) GetLastActivity() string {
	return s.LastActivity
}

// SetAddress sets the value of Address.
func (s *Miner) SetAddress(val string) {
	s.Address = val
}

// SetHashrate sets the value of Hashrate.
func (s *Miner) SetHashrate(val string) {
	s.Hashrate = val
}

// SetWorkersCount sets the value of WorkersCount.
func (s *Miner) SetWorkersCount(val uint32) {
	s.WorkersCount = val
}

// SetBlocksCount sets the value of BlocksCount.
func (s *Miner) SetBlocksCount(val uint32) {
	s.BlocksCount = val
}

// SetSoloBlocksCount sets the value of SoloBlocksCount.
func (s *Miner) SetSoloBlocksCount(val uint32) {
	s.SoloBlocksCount = val
}

// SetJoinedAt sets the value of JoinedAt.
func (s *Miner) SetJoinedAt(val string) {
	s.JoinedAt = val
}

// SetLastActivity sets the value of LastActivity.
func (s *Miner) SetLastActivity(val string) {
	s.LastActivity = val
}

func (*Miner) getBlockchainMinerRes() {}

// Ref: #/components/schemas/MinerBalance
type MinerBalance struct {
	Balance uint64 `json:"balance"`
}

// GetBalance returns the value of Balance.
func (s *MinerBalance) GetBalance() uint64 {
	return s.Balance
}

// SetBalance sets the value of Balance.
func (s *MinerBalance) SetBalance(val uint64) {
	s.Balance = val
}

func (*MinerBalance) getBlockchainMinerBalanceRes() {}

// Ref: #/components/schemas/MinerHashratesPoint
type MinerHashratesPoint struct {
	Hashrate string `json:"hashrate"`
	Date     string `json:"date"`
}

// GetHashrate returns the value of Hashrate.
func (s *MinerHashratesPoint) GetHashrate() string {
	return s.Hashrate
}

// GetDate returns the value of Date.
func (s *MinerHashratesPoint) GetDate() string {
	return s.Date
}

// SetHashrate sets the value of Hashrate.
func (s *MinerHashratesPoint) SetHashrate(val string) {
	s.Hashrate = val
}

// SetDate sets the value of Date.
func (s *MinerHashratesPoint) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/MinerHashratesPoints
type MinerHashratesPoints struct {
	Points []MinerHashratesPoint `json:"points"`
}

// GetPoints returns the value of Points.
func (s *MinerHashratesPoints) GetPoints() []MinerHashratesPoint {
	return s.Points
}

// SetPoints sets the value of Points.
func (s *MinerHashratesPoints) SetPoints(val []MinerHashratesPoint) {
	s.Points = val
}

func (*MinerHashratesPoints) getBlockchainMinerHashratesChartRes()       {}
func (*MinerHashratesPoints) getBlockchainMinerWorkerHashratesChartRes() {}

// Ref: #/components/schemas/MinerProfitabilitiesPoint
type MinerProfitabilitiesPoint struct {
	Balance uint64 `json:"balance"`
	Date    string `json:"date"`
}

// GetBalance returns the value of Balance.
func (s *MinerProfitabilitiesPoint) GetBalance() uint64 {
	return s.Balance
}

// GetDate returns the value of Date.
func (s *MinerProfitabilitiesPoint) GetDate() string {
	return s.Date
}

// SetBalance sets the value of Balance.
func (s *MinerProfitabilitiesPoint) SetBalance(val uint64) {
	s.Balance = val
}

// SetDate sets the value of Date.
func (s *MinerProfitabilitiesPoint) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/MinerProfitabilitiesPoints
type MinerProfitabilitiesPoints struct {
	Points []MinerProfitabilitiesPoint `json:"points"`
}

// GetPoints returns the value of Points.
func (s *MinerProfitabilitiesPoints) GetPoints() []MinerProfitabilitiesPoint {
	return s.Points
}

// SetPoints sets the value of Points.
func (s *MinerProfitabilitiesPoints) SetPoints(val []MinerProfitabilitiesPoint) {
	s.Points = val
}

func (*MinerProfitabilitiesPoints) getBlockchainMinerProfitabilitiesChartRes() {}

// Ref: #/components/schemas/MinerSharesPoint
type MinerSharesPoint struct {
	AcceptedSharesCount   uint32 `json:"accepted_shares_count"`
	RejectedSharesCount   uint32 `json:"rejected_shares_count"`
	StaleSharesCount      uint32 `json:"stale_shares_count"`
	ValidBlockSharesCount uint32 `json:"valid_block_shares_count"`
	Date                  string `json:"date"`
}

// GetAcceptedSharesCount returns the value of AcceptedSharesCount.
func (s *MinerSharesPoint) GetAcceptedSharesCount() uint32 {
	return s.AcceptedSharesCount
}

// GetRejectedSharesCount returns the value of RejectedSharesCount.
func (s *MinerSharesPoint) GetRejectedSharesCount() uint32 {
	return s.RejectedSharesCount
}

// GetStaleSharesCount returns the value of StaleSharesCount.
func (s *MinerSharesPoint) GetStaleSharesCount() uint32 {
	return s.StaleSharesCount
}

// GetValidBlockSharesCount returns the value of ValidBlockSharesCount.
func (s *MinerSharesPoint) GetValidBlockSharesCount() uint32 {
	return s.ValidBlockSharesCount
}

// GetDate returns the value of Date.
func (s *MinerSharesPoint) GetDate() string {
	return s.Date
}

// SetAcceptedSharesCount sets the value of AcceptedSharesCount.
func (s *MinerSharesPoint) SetAcceptedSharesCount(val uint32) {
	s.AcceptedSharesCount = val
}

// SetRejectedSharesCount sets the value of RejectedSharesCount.
func (s *MinerSharesPoint) SetRejectedSharesCount(val uint32) {
	s.RejectedSharesCount = val
}

// SetStaleSharesCount sets the value of StaleSharesCount.
func (s *MinerSharesPoint) SetStaleSharesCount(val uint32) {
	s.StaleSharesCount = val
}

// SetValidBlockSharesCount sets the value of ValidBlockSharesCount.
func (s *MinerSharesPoint) SetValidBlockSharesCount(val uint32) {
	s.ValidBlockSharesCount = val
}

// SetDate sets the value of Date.
func (s *MinerSharesPoint) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/MinerSharesPoints
type MinerSharesPoints struct {
	Points []MinerSharesPoint `json:"points"`
}

// GetPoints returns the value of Points.
func (s *MinerSharesPoints) GetPoints() []MinerSharesPoint {
	return s.Points
}

// SetPoints sets the value of Points.
func (s *MinerSharesPoints) SetPoints(val []MinerSharesPoint) {
	s.Points = val
}

func (*MinerSharesPoints) getBlockchainMinerSharesChartRes()       {}
func (*MinerSharesPoints) getBlockchainMinerWorkerSharesChartRes() {}

// Ref: #/components/schemas/MinerWorker
type MinerWorker struct {
	Worker      string `json:"worker"`
	Region      string `json:"region"`
	Agent       string `json:"agent"`
	Solo        bool   `json:"solo"`
	Hashrate    string `json:"hashrate"`
	ConnectedAt string `json:"connected_at"`
}

// GetWorker returns the value of Worker.
func (s *MinerWorker) GetWorker() string {
	return s.Worker
}

// GetRegion returns the value of Region.
func (s *MinerWorker) GetRegion() string {
	return s.Region
}

// GetAgent returns the value of Agent.
func (s *MinerWorker) GetAgent() string {
	return s.Agent
}

// GetSolo returns the value of Solo.
func (s *MinerWorker) GetSolo() bool {
	return s.Solo
}

// GetHashrate returns the value of Hashrate.
func (s *MinerWorker) GetHashrate() string {
	return s.Hashrate
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *MinerWorker) GetConnectedAt() string {
	return s.ConnectedAt
}

// SetWorker sets the value of Worker.
func (s *MinerWorker) SetWorker(val string) {
	s.Worker = val
}

// SetRegion sets the value of Region.
func (s *MinerWorker) SetRegion(val string) {
	s.Region = val
}

// SetAgent sets the value of Agent.
func (s *MinerWorker) SetAgent(val string) {
	s.Agent = val
}

// SetSolo sets the value of Solo.
func (s *MinerWorker) SetSolo(val bool) {
	s.Solo = val
}

// SetHashrate sets the value of Hashrate.
func (s *MinerWorker) SetHashrate(val string) {
	s.Hashrate = val
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *MinerWorker) SetConnectedAt(val string) {
	s.ConnectedAt = val
}

// Ref: #/components/schemas/MinerWorkersList
type MinerWorkersList struct {
	Workers []MinerWorker `json:"workers"`
}

// GetWorkers returns the value of Workers.
func (s *MinerWorkersList) GetWorkers() []MinerWorker {
	return s.Workers
}

// SetWorkers sets the value of Workers.
func (s *MinerWorkersList) SetWorkers(val []MinerWorker) {
	s.Workers = val
}

func (*MinerWorkersList) getBlockchainMinerWorkersRes() {}

// Merged schema.
// Ref: #/components/schemas/MinersList
type MinersList struct {
	Limit  uint32  `json:"limit"`
	Offset uint32  `json:"offset"`
	Total  uint32  `json:"total"`
	Miners []Miner `json:"miners"`
}

// GetLimit returns the value of Limit.
func (s *MinersList) GetLimit() uint32 {
	return s.Limit
}

// GetOffset returns the value of Offset.
func (s *MinersList) GetOffset() uint32 {
	return s.Offset
}

// GetTotal returns the value of Total.
func (s *MinersList) GetTotal() uint32 {
	return s.Total
}

// GetMiners returns the value of Miners.
func (s *MinersList) GetMiners() []Miner {
	return s.Miners
}

// SetLimit sets the value of Limit.
func (s *MinersList) SetLimit(val uint32) {
	s.Limit = val
}

// SetOffset sets the value of Offset.
func (s *MinersList) SetOffset(val uint32) {
	s.Offset = val
}

// SetTotal sets the value of Total.
func (s *MinersList) SetTotal(val uint32) {
	s.Total = val
}

// SetMiners sets the value of Miners.
func (s *MinersList) SetMiners(val []Miner) {
	s.Miners = val
}

func (*MinersList) getBlockchainMinersRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPoolNetworkInfo returns new OptPoolNetworkInfo with value set to v.
func NewOptPoolNetworkInfo(v PoolNetworkInfo) OptPoolNetworkInfo {
	return OptPoolNetworkInfo{
		Value: v,
		Set:   true,
	}
}

// OptPoolNetworkInfo is optional PoolNetworkInfo.
type OptPoolNetworkInfo struct {
	Value PoolNetworkInfo
	Set   bool
}

// IsSet returns true if OptPoolNetworkInfo was set.
func (o OptPoolNetworkInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPoolNetworkInfo) Reset() {
	var v PoolNetworkInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPoolNetworkInfo) SetTo(v PoolNetworkInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPoolNetworkInfo) Get() (v PoolNetworkInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPoolNetworkInfo) Or(d PoolNetworkInfo) PoolNetworkInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPoolStats returns new OptPoolStats with value set to v.
func NewOptPoolStats(v PoolStats) OptPoolStats {
	return OptPoolStats{
		Value: v,
		Set:   true,
	}
}

// OptPoolStats is optional PoolStats.
type OptPoolStats struct {
	Value PoolStats
	Set   bool
}

// IsSet returns true if OptPoolStats was set.
func (o OptPoolStats) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPoolStats) Reset() {
	var v PoolStats
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPoolStats) SetTo(v PoolStats) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPoolStats) Get() (v PoolStats, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPoolStats) Or(d PoolStats) PoolStats {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUint64 returns new OptUint64 with value set to v.
func NewOptUint64(v uint64) OptUint64 {
	return OptUint64{
		Value: v,
		Set:   true,
	}
}

// OptUint64 is optional uint64.
type OptUint64 struct {
	Value uint64
	Set   bool
}

// IsSet returns true if OptUint64 was set.
func (o OptUint64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUint64) Reset() {
	var v uint64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUint64) SetTo(v uint64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUint64) Get() (v uint64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUint64) Or(d uint64) uint64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Payout
type Payout struct {
	Miner  string `json:"miner"`
	TxHash string `json:"tx_hash"`
	Amount uint64 `json:"amount"`
	PaidAt string `json:"paid_at"`
}

// GetMiner returns the value of Miner.
func (s *Payout) GetMiner() string {
	return s.Miner
}

// GetTxHash returns the value of TxHash.
func (s *Payout) GetTxHash() string {
	return s.TxHash
}

// GetAmount returns the value of Amount.
func (s *Payout) GetAmount() uint64 {
	return s.Amount
}

// GetPaidAt returns the value of PaidAt.
func (s *Payout) GetPaidAt() string {
	return s.PaidAt
}

// SetMiner sets the value of Miner.
func (s *Payout) SetMiner(val string) {
	s.Miner = val
}

// SetTxHash sets the value of TxHash.
func (s *Payout) SetTxHash(val string) {
	s.TxHash = val
}

// SetAmount sets the value of Amount.
func (s *Payout) SetAmount(val uint64) {
	s.Amount = val
}

// SetPaidAt sets the value of PaidAt.
func (s *Payout) SetPaidAt(val string) {
	s.PaidAt = val
}

// Ref: #/components/schemas/PayoutMode
type PayoutMode string

const (
	PayoutModePplns PayoutMode = "pplns"
	PayoutModeProp  PayoutMode = "prop"
)

// AllValues returns all PayoutMode values.
func (PayoutMode) AllValues() []PayoutMode {
	return []PayoutMode{
		PayoutModePplns,
		PayoutModeProp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PayoutMode) MarshalText() ([]byte, error) {
	switch s {
	case PayoutModePplns:
		return []byte(s), nil
	case PayoutModeProp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PayoutMode) UnmarshalText(data []byte) error {
	switch PayoutMode(data) {
	case PayoutModePplns:
		*s = PayoutModePplns
		return nil
	case PayoutModeProp:
		*s = PayoutModeProp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PayoutsInfo
type PayoutsInfo struct {
	Interval  uint32    `json:"interval"`
	MinPayout uint64    `json:"min_payout"`
	MaxPayout OptUint64 `json:"max_payout"`
}

// GetInterval returns the value of Interval.
func (s *PayoutsInfo) GetInterval() uint32 {
	return s.Interval
}

// GetMinPayout returns the value of MinPayout.
func (s *PayoutsInfo) GetMinPayout() uint64 {
	return s.MinPayout
}

// GetMaxPayout returns the value of MaxPayout.
func (s *PayoutsInfo) GetMaxPayout() OptUint64 {
	return s.MaxPayout
}

// SetInterval sets the value of Interval.
func (s *PayoutsInfo) SetInterval(val uint32) {
	s.Interval = val
}

// SetMinPayout sets the value of MinPayout.
func (s *PayoutsInfo) SetMinPayout(val uint64) {
	s.MinPayout = val
}

// SetMaxPayout sets the value of MaxPayout.
func (s *PayoutsInfo) SetMaxPayout(val OptUint64) {
	s.MaxPayout = val
}

// Merged schema.
// Ref: #/components/schemas/PayoutsList
type PayoutsList struct {
	Limit   uint32   `json:"limit"`
	Offset  uint32   `json:"offset"`
	Total   uint32   `json:"total"`
	Payouts []Payout `json:"payouts"`
}

// GetLimit returns the value of Limit.
func (s *PayoutsList) GetLimit() uint32 {
	return s.Limit
}

// GetOffset returns the value of Offset.
func (s *PayoutsList) GetOffset() uint32 {
	return s.Offset
}

// GetTotal returns the value of Total.
func (s *PayoutsList) GetTotal() uint32 {
	return s.Total
}

// GetPayouts returns the value of Payouts.
func (s *PayoutsList) GetPayouts() []Payout {
	return s.Payouts
}

// SetLimit sets the value of Limit.
func (s *PayoutsList) SetLimit(val uint32) {
	s.Limit = val
}

// SetOffset sets the value of Offset.
func (s *PayoutsList) SetOffset(val uint32) {
	s.Offset = val
}

// SetTotal sets the value of Total.
func (s *PayoutsList) SetTotal(val uint32) {
	s.Total = val
}

// SetPayouts sets the value of Payouts.
func (s *PayoutsList) SetPayouts(val []Payout) {
	s.Payouts = val
}

func (*PayoutsList) getBlockchainPayoutsRes() {}

// Ref: #/components/schemas/Pool
type Pool struct {
	Info        PoolInfo        `json:"info"`
	Stats       PoolStats       `json:"stats"`
	NetworkInfo PoolNetworkInfo `json:"network_info"`
	Slaves      []PoolSlave     `json:"slaves"`
}

// GetInfo returns the value of Info.
func (s *Pool) GetInfo() PoolInfo {
	return s.Info
}

// GetStats returns the value of Stats.
func (s *Pool) GetStats() PoolStats {
	return s.Stats
}

// GetNetworkInfo returns the value of NetworkInfo.
func (s *Pool) GetNetworkInfo() PoolNetworkInfo {
	return s.NetworkInfo
}

// GetSlaves returns the value of Slaves.
func (s *Pool) GetSlaves() []PoolSlave {
	return s.Slaves
}

// SetInfo sets the value of Info.
func (s *Pool) SetInfo(val PoolInfo) {
	s.Info = val
}

// SetStats sets the value of Stats.
func (s *Pool) SetStats(val PoolStats) {
	s.Stats = val
}

// SetNetworkInfo sets the value of NetworkInfo.
func (s *Pool) SetNetworkInfo(val PoolNetworkInfo) {
	s.NetworkInfo = val
}

// SetSlaves sets the value of Slaves.
func (s *Pool) SetSlaves(val []PoolSlave) {
	s.Slaves = val
}

func (*Pool) getBlockchainPoolRes() {}

// Ref: #/components/schemas/PoolDifficultiesPoint
type PoolDifficultiesPoint struct {
	ShareDifficulty uint64 `json:"share_difficulty"`
	Date            string `json:"date"`
}

// GetShareDifficulty returns the value of ShareDifficulty.
func (s *PoolDifficultiesPoint) GetShareDifficulty() uint64 {
	return s.ShareDifficulty
}

// GetDate returns the value of Date.
func (s *PoolDifficultiesPoint) GetDate() string {
	return s.Date
}

// SetShareDifficulty sets the value of ShareDifficulty.
func (s *PoolDifficultiesPoint) SetShareDifficulty(val uint64) {
	s.ShareDifficulty = val
}

// SetDate sets the value of Date.
func (s *PoolDifficultiesPoint) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/PoolDifficultiesPoints
type PoolDifficultiesPoints struct {
	Points []PoolDifficultiesPoint `json:"points"`
}

// GetPoints returns the value of Points.
func (s *PoolDifficultiesPoints) GetPoints() []PoolDifficultiesPoint {
	return s.Points
}

// SetPoints sets the value of Points.
func (s *PoolDifficultiesPoints) SetPoints(val []PoolDifficultiesPoint) {
	s.Points = val
}

func (*PoolDifficultiesPoints) getBlockchainPoolDifficultiesChartRes() {}

// Ref: #/components/schemas/PoolFee
type PoolFee struct {
	Fee     float64    `json:"fee"`
	SoloFee OptFloat64 `json:"solo_fee"`
}

// GetFee returns the value of Fee.
func (s *PoolFee) GetFee() float64 {
	return s.Fee
}

// GetSoloFee returns the value of SoloFee.
func (s *PoolFee) GetSoloFee() OptFloat64 {
	return s.SoloFee
}

// SetFee sets the value of Fee.
func (s *PoolFee) SetFee(val float64) {
	s.Fee = val
}

// SetSoloFee sets the value of SoloFee.
func (s *PoolFee) SetSoloFee(val OptFloat64) {
	s.SoloFee = val
}

// Ref: #/components/schemas/PoolInfo
type PoolInfo struct {
	Blockchain  string      `json:"blockchain"`
	Host        string      `json:"host"`
	Algos       []string    `json:"algos"`
	PayoutMode  PayoutMode  `json:"payout_mode"`
	Solo        bool        `json:"solo"`
	Fee         PoolFee     `json:"fee"`
	PayoutsInfo PayoutsInfo `json:"payouts_info"`
	Agents      []string    `json:"agents"`
}

// GetBlockchain returns the value of Blockchain.
func (s *PoolInfo) GetBlockchain() string {
	return s.Blockchain
}

// GetHost returns the value of Host.
func (s *PoolInfo) GetHost() string {
	return s.Host
}

// GetAlgos returns the value of Algos.
func (s *PoolInfo) GetAlgos() []string {
	return s.Algos
}

// GetPayoutMode returns the value of PayoutMode.
func (s *PoolInfo) GetPayoutMode() PayoutMode {
	return s.PayoutMode
}

// GetSolo returns the value of Solo.
func (s *PoolInfo) GetSolo() bool {
	return s.Solo
}

// GetFee returns the value of Fee.
func (s *PoolInfo) GetFee() PoolFee {
	return s.Fee
}

// GetPayoutsInfo returns the value of PayoutsInfo.
func (s *PoolInfo) GetPayoutsInfo() PayoutsInfo {
	return s.PayoutsInfo
}

// GetAgents returns the value of Agents.
func (s *PoolInfo) GetAgents() []string {
	return s.Agents
}

// SetBlockchain sets the value of Blockchain.
func (s *PoolInfo) SetBlockchain(val string) {
	s.Blockchain = val
}

// SetHost sets the value of Host.
func (s *PoolInfo) SetHost(val string) {
	s.Host = val
}

// SetAlgos sets the value of Algos.
func (s *PoolInfo) SetAlgos(val []string) {
	s.Algos = val
}

// SetPayoutMode sets the value of PayoutMode.
func (s *PoolInfo) SetPayoutMode(val PayoutMode) {
	s.PayoutMode = val
}

// SetSolo sets the value of Solo.
func (s *PoolInfo) SetSolo(val bool) {
	s.Solo = val
}

// SetFee sets the value of Fee.
func (s *PoolInfo) SetFee(val PoolFee) {
	s.Fee = val
}

// SetPayoutsInfo sets the value of PayoutsInfo.
func (s *PoolInfo) SetPayoutsInfo(val PayoutsInfo) {
	s.PayoutsInfo = val
}

// SetAgents sets the value of Agents.
func (s *PoolInfo) SetAgents(val []string) {
	s.Agents = val
}

func (*PoolInfo) getBlockchainPoolInfoRes() {}

// Ref: #/components/schemas/PoolNetworkInfo
type PoolNetworkInfo struct {
	TopBlockHash string `json:"top_block_hash"`
	Difficulty   string `json:"difficulty"`
	BlockReward  uint64 `json:"block_reward"`
}

// GetTopBlockHash returns the value of TopBlockHash.
func (s *PoolNetworkInfo) GetTopBlockHash() string {
	return s.TopBlockHash
}

// GetDifficulty returns the value of Difficulty.
func (s *PoolNetworkInfo) GetDifficulty() string {
	return s.Difficulty
}

// GetBlockReward returns the value of BlockReward.
func (s *PoolNetworkInfo) GetBlockReward() uint64 {
	return s.BlockReward
}

// SetTopBlockHash sets the value of TopBlockHash.
func (s *PoolNetworkInfo) SetTopBlockHash(val string) {
	s.TopBlockHash = val
}

// SetDifficulty sets the value of Difficulty.
func (s *PoolNetworkInfo) SetDifficulty(val string) {
	s.Difficulty = val
}

// SetBlockReward sets the value of BlockReward.
func (s *PoolNetworkInfo) SetBlockReward(val uint64) {
	s.BlockReward = val
}

func (*PoolNetworkInfo) getBlockchainPoolNetworkInfoRes() {}

// Ref: #/components/schemas/PoolSlave
type PoolSlave struct {
	Region      string `json:"region"`
	Host        string `json:"host"`
	TCPPort     uint32 `json:"tcp_port"`
	SslPort     uint32 `json:"ssl_port"`
	ConnectedAt string `json:"connected_at"`
}

// GetRegion returns the value of Region.
func (s *PoolSlave) GetRegion() string {
	return s.Region
}

// GetHost returns the value of Host.
func (s *PoolSlave) GetHost() string {
	return s.Host
}

// GetTCPPort returns the value of TCPPort.
func (s *PoolSlave) GetTCPPort() uint32 {
	return s.TCPPort
}

// GetSslPort returns the value of SslPort.
func (s *PoolSlave) GetSslPort() uint32 {
	return s.SslPort
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *PoolSlave) GetConnectedAt() string {
	return s.ConnectedAt
}

// SetRegion sets the value of Region.
func (s *PoolSlave) SetRegion(val string) {
	s.Region = val
}

// SetHost sets the value of Host.
func (s *PoolSlave) SetHost(val string) {
	s.Host = val
}

// SetTCPPort sets the value of TCPPort.
func (s *PoolSlave) SetTCPPort(val uint32) {
	s.TCPPort = val
}

// SetSslPort sets the value of SslPort.
func (s *PoolSlave) SetSslPort(val uint32) {
	s.SslPort = val
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *PoolSlave) SetConnectedAt(val string) {
	s.ConnectedAt = val
}

// Ref: #/components/schemas/PoolSlavesList
type PoolSlavesList struct {
	Slaves []PoolSlave `json:"slaves"`
}

// GetSlaves returns the value of Slaves.
func (s *PoolSlavesList) GetSlaves() []PoolSlave {
	return s.Slaves
}

// SetSlaves sets the value of Slaves.
func (s *PoolSlavesList) SetSlaves(val []PoolSlave) {
	s.Slaves = val
}

func (*PoolSlavesList) getBlockchainPoolSlavesRes() {}

// Ref: #/components/schemas/PoolStats
type PoolStats struct {
	MinersCount     uint32 `json:"miners_count"`
	WorkersCount    uint32 `json:"workers_count"`
	Hashrate        string `json:"hashrate"`
	AvgHashrate     string `json:"avg_hashrate"`
	ShareDifficulty uint64 `json:"share_difficulty"`
}

// GetMinersCount returns the value of MinersCount.
func (s *PoolStats) GetMinersCount() uint32 {
	return s.MinersCount
}

// GetWorkersCount returns the value of WorkersCount.
func (s *PoolStats) GetWorkersCount() uint32 {
	return s.WorkersCount
}

// GetHashrate returns the value of Hashrate.
func (s *PoolStats) GetHashrate() string {
	return s.Hashrate
}

// GetAvgHashrate returns the value of AvgHashrate.
func (s *PoolStats) GetAvgHashrate() string {
	return s.AvgHashrate
}

// GetShareDifficulty returns the value of ShareDifficulty.
func (s *PoolStats) GetShareDifficulty() uint64 {
	return s.ShareDifficulty
}

// SetMinersCount sets the value of MinersCount.
func (s *PoolStats) SetMinersCount(val uint32) {
	s.MinersCount = val
}

// SetWorkersCount sets the value of WorkersCount.
func (s *PoolStats) SetWorkersCount(val uint32) {
	s.WorkersCount = val
}

// SetHashrate sets the value of Hashrate.
func (s *PoolStats) SetHashrate(val string) {
	s.Hashrate = val
}

// SetAvgHashrate sets the value of AvgHashrate.
func (s *PoolStats) SetAvgHashrate(val string) {
	s.AvgHashrate = val
}

// SetShareDifficulty sets the value of ShareDifficulty.
func (s *PoolStats) SetShareDifficulty(val uint64) {
	s.ShareDifficulty = val
}

func (*PoolStats) getBlockchainPoolStatsRes() {}

// Ref: #/components/schemas/PoolStatsPoint
type PoolStatsPoint struct {
	Hashrate    string `json:"hashrate"`
	AvgHashrate string `json:"avg_hashrate"`
	MinersCount uint32 `json:"miners_count"`
	Date        string `json:"date"`
}

// GetHashrate returns the value of Hashrate.
func (s *PoolStatsPoint) GetHashrate() string {
	return s.Hashrate
}

// GetAvgHashrate returns the value of AvgHashrate.
func (s *PoolStatsPoint) GetAvgHashrate() string {
	return s.AvgHashrate
}

// GetMinersCount returns the value of MinersCount.
func (s *PoolStatsPoint) GetMinersCount() uint32 {
	return s.MinersCount
}

// GetDate returns the value of Date.
func (s *PoolStatsPoint) GetDate() string {
	return s.Date
}

// SetHashrate sets the value of Hashrate.
func (s *PoolStatsPoint) SetHashrate(val string) {
	s.Hashrate = val
}

// SetAvgHashrate sets the value of AvgHashrate.
func (s *PoolStatsPoint) SetAvgHashrate(val string) {
	s.AvgHashrate = val
}

// SetMinersCount sets the value of MinersCount.
func (s *PoolStatsPoint) SetMinersCount(val uint32) {
	s.MinersCount = val
}

// SetDate sets the value of Date.
func (s *PoolStatsPoint) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/PoolStatsPoints
type PoolStatsPoints struct {
	Points []PoolStatsPoint `json:"points"`
}

// GetPoints returns the value of Points.
func (s *PoolStatsPoints) GetPoints() []PoolStatsPoint {
	return s.Points
}

// SetPoints sets the value of Points.
func (s *PoolStatsPoints) SetPoints(val []PoolStatsPoint) {
	s.Points = val
}

func (*PoolStatsPoints) getBlockchainPoolStatsChartRes() {}

// Ref: #/components/schemas/PoolsList
type PoolsList struct {
	Pools []BlockchainPool `json:"pools"`
}

// GetPools returns the value of Pools.
func (s *PoolsList) GetPools() []BlockchainPool {
	return s.Pools
}

// SetPools sets the value of Pools.
func (s *PoolsList) SetPools(val []BlockchainPool) {
	s.Pools = val
}

func (*PoolsList) getPoolsRes() {}

// Ref: #/components/schemas/PricesList
type PricesList struct {
	Prices []BlockchainPrice `json:"prices"`
}

// GetPrices returns the value of Prices.
func (s *PricesList) GetPrices() []BlockchainPrice {
	return s.Prices
}

// SetPrices sets the value of Prices.
func (s *PricesList) SetPrices(val []BlockchainPrice) {
	s.Prices = val
}

func (*PricesList) getPricesRes() {}

// Ref: #/components/schemas/RoundsPoint
type RoundsPoint struct {
	RoundsCount      uint32  `json:"rounds_count"`
	MinersCount      uint32  `json:"miners_count"`
	AvgRoundInterval float64 `json:"avg_round_interval"`
	Date             string  `json:"date"`
}

// GetRoundsCount returns the value of RoundsCount.
func (s *RoundsPoint) GetRoundsCount() uint32 {
	return s.RoundsCount
}

// GetMinersCount returns the value of MinersCount.
func (s *RoundsPoint) GetMinersCount() uint32 {
	return s.MinersCount
}

// GetAvgRoundInterval returns the value of AvgRoundInterval.
func (s *RoundsPoint) GetAvgRoundInterval() float64 {
	return s.AvgRoundInterval
}

// GetDate returns the value of Date.
func (s *RoundsPoint) GetDate() string {
	return s.Date
}

// SetRoundsCount sets the value of RoundsCount.
func (s *RoundsPoint) SetRoundsCount(val uint32) {
	s.RoundsCount = val
}

// SetMinersCount sets the value of MinersCount.
func (s *RoundsPoint) SetMinersCount(val uint32) {
	s.MinersCount = val
}

// SetAvgRoundInterval sets the value of AvgRoundInterval.
func (s *RoundsPoint) SetAvgRoundInterval(val float64) {
	s.AvgRoundInterval = val
}

// SetDate sets the value of Date.
func (s *RoundsPoint) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/RoundsPoints
type RoundsPoints struct {
	Points []RoundsPoint `json:"points"`
}

// GetPoints returns the value of Points.
func (s *RoundsPoints) GetPoints() []RoundsPoint {
	return s.Points
}

// SetPoints sets the value of Points.
func (s *RoundsPoints) SetPoints(val []RoundsPoint) {
	s.Points = val
}

func (*RoundsPoints) getBlockchainRoundsChartRes() {}
