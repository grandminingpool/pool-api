// Code generated by ogen, DO NOT EDIT.

package apiModels

import (
	"github.com/go-faster/errors"
)

// Ref: #/components/schemas/Blockchain
type Blockchain struct {
	Coin       string `json:"coin"`
	Name       string `json:"name"`
	Ticker     string `json:"ticker"`
	AtomicUnit int    `json:"atomic_unit"`
}

// GetCoin returns the value of Coin.
func (s *Blockchain) GetCoin() string {
	return s.Coin
}

// GetName returns the value of Name.
func (s *Blockchain) GetName() string {
	return s.Name
}

// GetTicker returns the value of Ticker.
func (s *Blockchain) GetTicker() string {
	return s.Ticker
}

// GetAtomicUnit returns the value of AtomicUnit.
func (s *Blockchain) GetAtomicUnit() int {
	return s.AtomicUnit
}

// SetCoin sets the value of Coin.
func (s *Blockchain) SetCoin(val string) {
	s.Coin = val
}

// SetName sets the value of Name.
func (s *Blockchain) SetName(val string) {
	s.Name = val
}

// SetTicker sets the value of Ticker.
func (s *Blockchain) SetTicker(val string) {
	s.Ticker = val
}

// SetAtomicUnit sets the value of AtomicUnit.
func (s *Blockchain) SetAtomicUnit(val int) {
	s.AtomicUnit = val
}

// Merged schema.
// Ref: #/components/schemas/BlockchainCoinPrice
type BlockchainCoinPrice struct {
	Price                    float64       `json:"price"`
	PriceChange24hPercentage float64       `json:"price_change_24h_percentage"`
	Markets                  []MarketPrice `json:"markets"`
}

// GetPrice returns the value of Price.
func (s *BlockchainCoinPrice) GetPrice() float64 {
	return s.Price
}

// GetPriceChange24hPercentage returns the value of PriceChange24hPercentage.
func (s *BlockchainCoinPrice) GetPriceChange24hPercentage() float64 {
	return s.PriceChange24hPercentage
}

// GetMarkets returns the value of Markets.
func (s *BlockchainCoinPrice) GetMarkets() []MarketPrice {
	return s.Markets
}

// SetPrice sets the value of Price.
func (s *BlockchainCoinPrice) SetPrice(val float64) {
	s.Price = val
}

// SetPriceChange24hPercentage sets the value of PriceChange24hPercentage.
func (s *BlockchainCoinPrice) SetPriceChange24hPercentage(val float64) {
	s.PriceChange24hPercentage = val
}

// SetMarkets sets the value of Markets.
func (s *BlockchainCoinPrice) SetMarkets(val []MarketPrice) {
	s.Markets = val
}

// Merged schema.
// Ref: #/components/schemas/CoinPrice
type CoinPrice struct {
	Price                    float64 `json:"price"`
	PriceChange24hPercentage float64 `json:"price_change_24h_percentage"`
	Coin                     string  `json:"coin"`
}

// GetPrice returns the value of Price.
func (s *CoinPrice) GetPrice() float64 {
	return s.Price
}

// GetPriceChange24hPercentage returns the value of PriceChange24hPercentage.
func (s *CoinPrice) GetPriceChange24hPercentage() float64 {
	return s.PriceChange24hPercentage
}

// GetCoin returns the value of Coin.
func (s *CoinPrice) GetCoin() string {
	return s.Coin
}

// SetPrice sets the value of Price.
func (s *CoinPrice) SetPrice(val float64) {
	s.Price = val
}

// SetPriceChange24hPercentage sets the value of PriceChange24hPercentage.
func (s *CoinPrice) SetPriceChange24hPercentage(val float64) {
	s.PriceChange24hPercentage = val
}

// SetCoin sets the value of Coin.
func (s *CoinPrice) SetCoin(val string) {
	s.Coin = val
}

// Merged schema.
// Ref: #/components/schemas/MarketPrice
type MarketPrice struct {
	Price                    float64 `json:"price"`
	PriceChange24hPercentage float64 `json:"price_change_24h_percentage"`
	Ticker                   string  `json:"ticker"`
}

// GetPrice returns the value of Price.
func (s *MarketPrice) GetPrice() float64 {
	return s.Price
}

// GetPriceChange24hPercentage returns the value of PriceChange24hPercentage.
func (s *MarketPrice) GetPriceChange24hPercentage() float64 {
	return s.PriceChange24hPercentage
}

// GetTicker returns the value of Ticker.
func (s *MarketPrice) GetTicker() string {
	return s.Ticker
}

// SetPrice sets the value of Price.
func (s *MarketPrice) SetPrice(val float64) {
	s.Price = val
}

// SetPriceChange24hPercentage sets the value of PriceChange24hPercentage.
func (s *MarketPrice) SetPriceChange24hPercentage(val float64) {
	s.PriceChange24hPercentage = val
}

// SetTicker sets the value of Ticker.
func (s *MarketPrice) SetTicker(val string) {
	s.Ticker = val
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PayoutMode
type PayoutMode string

const (
	PayoutModePplns PayoutMode = "pplns"
	PayoutModeProp  PayoutMode = "prop"
)

// AllValues returns all PayoutMode values.
func (PayoutMode) AllValues() []PayoutMode {
	return []PayoutMode{
		PayoutModePplns,
		PayoutModeProp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PayoutMode) MarshalText() ([]byte, error) {
	switch s {
	case PayoutModePplns:
		return []byte(s), nil
	case PayoutModeProp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PayoutMode) UnmarshalText(data []byte) error {
	switch PayoutMode(data) {
	case PayoutModePplns:
		*s = PayoutModePplns
		return nil
	case PayoutModeProp:
		*s = PayoutModeProp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PayoutsInfo
type PayoutsInfo struct {
	Interval  int    `json:"interval"`
	MinPayout OptInt `json:"min_payout"`
	MaxPayout OptInt `json:"max_payout"`
}

// GetInterval returns the value of Interval.
func (s *PayoutsInfo) GetInterval() int {
	return s.Interval
}

// GetMinPayout returns the value of MinPayout.
func (s *PayoutsInfo) GetMinPayout() OptInt {
	return s.MinPayout
}

// GetMaxPayout returns the value of MaxPayout.
func (s *PayoutsInfo) GetMaxPayout() OptInt {
	return s.MaxPayout
}

// SetInterval sets the value of Interval.
func (s *PayoutsInfo) SetInterval(val int) {
	s.Interval = val
}

// SetMinPayout sets the value of MinPayout.
func (s *PayoutsInfo) SetMinPayout(val OptInt) {
	s.MinPayout = val
}

// SetMaxPayout sets the value of MaxPayout.
func (s *PayoutsInfo) SetMaxPayout(val OptInt) {
	s.MaxPayout = val
}

// Ref: #/components/schemas/Pool
type Pool struct {
	Info   PoolInfo    `json:"info"`
	Stats  PoolStats   `json:"stats"`
	Slaves []PoolSlave `json:"slaves"`
}

// GetInfo returns the value of Info.
func (s *Pool) GetInfo() PoolInfo {
	return s.Info
}

// GetStats returns the value of Stats.
func (s *Pool) GetStats() PoolStats {
	return s.Stats
}

// GetSlaves returns the value of Slaves.
func (s *Pool) GetSlaves() []PoolSlave {
	return s.Slaves
}

// SetInfo sets the value of Info.
func (s *Pool) SetInfo(val PoolInfo) {
	s.Info = val
}

// SetStats sets the value of Stats.
func (s *Pool) SetStats(val PoolStats) {
	s.Stats = val
}

// SetSlaves sets the value of Slaves.
func (s *Pool) SetSlaves(val []PoolSlave) {
	s.Slaves = val
}

// Ref: #/components/schemas/PoolFee
type PoolFee struct {
	Fee     float64    `json:"fee"`
	SoloFee OptFloat64 `json:"solo_fee"`
}

// GetFee returns the value of Fee.
func (s *PoolFee) GetFee() float64 {
	return s.Fee
}

// GetSoloFee returns the value of SoloFee.
func (s *PoolFee) GetSoloFee() OptFloat64 {
	return s.SoloFee
}

// SetFee sets the value of Fee.
func (s *PoolFee) SetFee(val float64) {
	s.Fee = val
}

// SetSoloFee sets the value of SoloFee.
func (s *PoolFee) SetSoloFee(val OptFloat64) {
	s.SoloFee = val
}

// Ref: #/components/schemas/PoolInfo
type PoolInfo struct {
	Blockchain  string      `json:"blockchain"`
	Host        string      `json:"host"`
	Algos       []string    `json:"algos"`
	PayoutMode  PayoutMode  `json:"payout_mode"`
	Solo        bool        `json:"solo"`
	Fee         PoolFee     `json:"fee"`
	PayoutsInfo PayoutsInfo `json:"payouts_info"`
	Agents      []string    `json:"agents"`
}

// GetBlockchain returns the value of Blockchain.
func (s *PoolInfo) GetBlockchain() string {
	return s.Blockchain
}

// GetHost returns the value of Host.
func (s *PoolInfo) GetHost() string {
	return s.Host
}

// GetAlgos returns the value of Algos.
func (s *PoolInfo) GetAlgos() []string {
	return s.Algos
}

// GetPayoutMode returns the value of PayoutMode.
func (s *PoolInfo) GetPayoutMode() PayoutMode {
	return s.PayoutMode
}

// GetSolo returns the value of Solo.
func (s *PoolInfo) GetSolo() bool {
	return s.Solo
}

// GetFee returns the value of Fee.
func (s *PoolInfo) GetFee() PoolFee {
	return s.Fee
}

// GetPayoutsInfo returns the value of PayoutsInfo.
func (s *PoolInfo) GetPayoutsInfo() PayoutsInfo {
	return s.PayoutsInfo
}

// GetAgents returns the value of Agents.
func (s *PoolInfo) GetAgents() []string {
	return s.Agents
}

// SetBlockchain sets the value of Blockchain.
func (s *PoolInfo) SetBlockchain(val string) {
	s.Blockchain = val
}

// SetHost sets the value of Host.
func (s *PoolInfo) SetHost(val string) {
	s.Host = val
}

// SetAlgos sets the value of Algos.
func (s *PoolInfo) SetAlgos(val []string) {
	s.Algos = val
}

// SetPayoutMode sets the value of PayoutMode.
func (s *PoolInfo) SetPayoutMode(val PayoutMode) {
	s.PayoutMode = val
}

// SetSolo sets the value of Solo.
func (s *PoolInfo) SetSolo(val bool) {
	s.Solo = val
}

// SetFee sets the value of Fee.
func (s *PoolInfo) SetFee(val PoolFee) {
	s.Fee = val
}

// SetPayoutsInfo sets the value of PayoutsInfo.
func (s *PoolInfo) SetPayoutsInfo(val PayoutsInfo) {
	s.PayoutsInfo = val
}

// SetAgents sets the value of Agents.
func (s *PoolInfo) SetAgents(val []string) {
	s.Agents = val
}

// Ref: #/components/schemas/PoolSlave
type PoolSlave struct {
	Region      string `json:"region"`
	Host        string `json:"host"`
	TCPPort     int    `json:"tcp_port"`
	SslPort     int    `json:"ssl_port"`
	SoloPort    OptInt `json:"solo_port"`
	ConnectedAt string `json:"connected_at"`
}

// GetRegion returns the value of Region.
func (s *PoolSlave) GetRegion() string {
	return s.Region
}

// GetHost returns the value of Host.
func (s *PoolSlave) GetHost() string {
	return s.Host
}

// GetTCPPort returns the value of TCPPort.
func (s *PoolSlave) GetTCPPort() int {
	return s.TCPPort
}

// GetSslPort returns the value of SslPort.
func (s *PoolSlave) GetSslPort() int {
	return s.SslPort
}

// GetSoloPort returns the value of SoloPort.
func (s *PoolSlave) GetSoloPort() OptInt {
	return s.SoloPort
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *PoolSlave) GetConnectedAt() string {
	return s.ConnectedAt
}

// SetRegion sets the value of Region.
func (s *PoolSlave) SetRegion(val string) {
	s.Region = val
}

// SetHost sets the value of Host.
func (s *PoolSlave) SetHost(val string) {
	s.Host = val
}

// SetTCPPort sets the value of TCPPort.
func (s *PoolSlave) SetTCPPort(val int) {
	s.TCPPort = val
}

// SetSslPort sets the value of SslPort.
func (s *PoolSlave) SetSslPort(val int) {
	s.SslPort = val
}

// SetSoloPort sets the value of SoloPort.
func (s *PoolSlave) SetSoloPort(val OptInt) {
	s.SoloPort = val
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *PoolSlave) SetConnectedAt(val string) {
	s.ConnectedAt = val
}

// Ref: #/components/schemas/PoolStats
type PoolStats struct {
	MinersCount         int       `json:"miners_count"`
	SoloMinersCount     OptInt    `json:"solo_miners_count"`
	Hashrate            string    `json:"hashrate"`
	AvgHashrate         string    `json:"avg_hashrate"`
	SoloHashrate        OptString `json:"solo_hashrate"`
	SoloAvgHashrate     OptString `json:"solo_avg_hashrate"`
	ShareDifficulty     int       `json:"share_difficulty"`
	SoloShareDifficulty OptInt    `json:"solo_share_difficulty"`
}

// GetMinersCount returns the value of MinersCount.
func (s *PoolStats) GetMinersCount() int {
	return s.MinersCount
}

// GetSoloMinersCount returns the value of SoloMinersCount.
func (s *PoolStats) GetSoloMinersCount() OptInt {
	return s.SoloMinersCount
}

// GetHashrate returns the value of Hashrate.
func (s *PoolStats) GetHashrate() string {
	return s.Hashrate
}

// GetAvgHashrate returns the value of AvgHashrate.
func (s *PoolStats) GetAvgHashrate() string {
	return s.AvgHashrate
}

// GetSoloHashrate returns the value of SoloHashrate.
func (s *PoolStats) GetSoloHashrate() OptString {
	return s.SoloHashrate
}

// GetSoloAvgHashrate returns the value of SoloAvgHashrate.
func (s *PoolStats) GetSoloAvgHashrate() OptString {
	return s.SoloAvgHashrate
}

// GetShareDifficulty returns the value of ShareDifficulty.
func (s *PoolStats) GetShareDifficulty() int {
	return s.ShareDifficulty
}

// GetSoloShareDifficulty returns the value of SoloShareDifficulty.
func (s *PoolStats) GetSoloShareDifficulty() OptInt {
	return s.SoloShareDifficulty
}

// SetMinersCount sets the value of MinersCount.
func (s *PoolStats) SetMinersCount(val int) {
	s.MinersCount = val
}

// SetSoloMinersCount sets the value of SoloMinersCount.
func (s *PoolStats) SetSoloMinersCount(val OptInt) {
	s.SoloMinersCount = val
}

// SetHashrate sets the value of Hashrate.
func (s *PoolStats) SetHashrate(val string) {
	s.Hashrate = val
}

// SetAvgHashrate sets the value of AvgHashrate.
func (s *PoolStats) SetAvgHashrate(val string) {
	s.AvgHashrate = val
}

// SetSoloHashrate sets the value of SoloHashrate.
func (s *PoolStats) SetSoloHashrate(val OptString) {
	s.SoloHashrate = val
}

// SetSoloAvgHashrate sets the value of SoloAvgHashrate.
func (s *PoolStats) SetSoloAvgHashrate(val OptString) {
	s.SoloAvgHashrate = val
}

// SetShareDifficulty sets the value of ShareDifficulty.
func (s *PoolStats) SetShareDifficulty(val int) {
	s.ShareDifficulty = val
}

// SetSoloShareDifficulty sets the value of SoloShareDifficulty.
func (s *PoolStats) SetSoloShareDifficulty(val OptInt) {
	s.SoloShareDifficulty = val
}
